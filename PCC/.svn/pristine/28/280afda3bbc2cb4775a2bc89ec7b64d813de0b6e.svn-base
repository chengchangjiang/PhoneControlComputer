package com.example.pcc;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Calendar;
import java.util.Locale;
import java.util.logging.LogRecord;

import utils.PcControlService;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.text.format.DateFormat;
import android.util.Log;
import android.view.Gravity;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;


public class CameraActivity extends BaseActivity {
	
	private Button mCameraButton;
	private Button mSendButton;
	private Button mPickButton;
    private ImageView mImage;
    private String fileName;
    private String pathUrl;
    private String imageName;
    private PcControlService mPcService;
    private FileInputStream fis = null;
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_camera);
		mCameraButton = (Button) findViewById(R.id.camera_button);
		mSendButton = (Button) findViewById(R.id.send_button);
		mPickButton = (Button) findViewById(R.id.pick_button);
        mImage = (ImageView) findViewById(R.id.image_show);
        
        getPhotopath();
        mSendButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO 自动生成的方法存根
				Message msg = new Message();
				mPcService = new PcControlService(getHostInetAddress());
				switch(mPcService.sendImage(new File(fileName))){
				case 1:msg.arg1 =1;break;
				default:msg.arg1 =0;break;
				}
				mHandler.sendMessage(msg);
				
			}
		});
        mPickButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO 自动生成的方法存根
					Intent intent = new Intent(Intent.ACTION_GET_CONTENT);  
	                intent.addCategory(Intent.CATEGORY_OPENABLE);  
	                intent.setType("image/*");  
	                intent.putExtra("aspectX",1);  
	                intent.putExtra("aspectY",1);  
	                intent.putExtra("outputX", getWindowManager().getDefaultDisplay().getWidth());  
	                intent.putExtra("outputY", getWindowManager().getDefaultDisplay().getWidth());  
	                intent.putExtra("return-data",true);  
	                startActivityForResult(intent, 11);  
			}
		});
        
        mCameraButton.setOnClickListener(new OnClickListener() {
            
            @Override
            public void onClick(View v) {
                // 跳转至拍照界面
               Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
				 // 加载路径
               Uri uri = Uri.fromFile(new File(fileName));
               // 指定存储路径，这样就可以保存原图了
               intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);
			   startActivityForResult(intent, 1); 
            }
        });
    }
	
	 /**
	  * 回调函数
	  */
	@Override                           
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == Activity.RESULT_OK) {
    		if(requestCode == 1){
            try {
				fis = new FileInputStream(fileName);
			} catch (FileNotFoundException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			}
            // 把流解析成bitmap
            Bitmap bitmap = BitmapFactory.decodeStream(fis);
            // 设置图片
            mImage.setImageBitmap(bitmap);
           
            // 关闭流
            try {
                    fis.close();
            } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
            }
            
    		}
    		else if(requestCode == 11){
    			 Uri selectedImage = data.getData();  
    	         String[] filePathColumn = { MediaStore.Images.Media.DATA };  
    	   
    	         Cursor cursor = getContentResolver().query(selectedImage,  
    	                    filePathColumn, null, null, null);  
    	         cursor.moveToFirst();  
    	   
    	         int columnIndex = cursor.getColumnIndex(filePathColumn[0]);  
    	         fileName = cursor.getString(columnIndex);  
    	         cursor.close();  
    	         showPhoto(mImage,fileName);
    		}
			
		}
    }
	/**
	 * 异步消息处理
	 */
	Handler mHandler = new Handler(){  
        @Override  
        public void handleMessage(Message msg){  
        	switch(msg.arg1){
        	case 2:DisplayToast("照片上传中……"); break;
        	case 1:DisplayToast("照片上传成功"); break;
        	case 0:DisplayToast("照片上传失败"); break;
        	default: break;
        	}
        }
	};
	/**
	 * 显示相册选出的照片
	 * @param photo
	 * @param picturePath
	 */
    private void showPhoto(ImageView photo,String picturePath){  
        
        // 缩放图片, width, height 按相同比例缩放图片  
        BitmapFactory.Options options = new BitmapFactory.Options();  
        // options 设为true时，构造出的bitmap没有图片，只有一些长宽等配置信息，但比较快，设为false时，才有图片  
        options.inJustDecodeBounds = true;  
        Bitmap bitmap = BitmapFactory.decodeFile(picturePath, options);  
        int scale = (int)( options.outWidth / (float)300);  
        if(scale <= 0)  
            scale = 1;  
        options.inSampleSize = scale;  
        options.inJustDecodeBounds = false;  
        bitmap = BitmapFactory.decodeFile(picturePath, options);  
          
        photo.setImageBitmap(bitmap);  
        photo.setMaxHeight(350);  
    }  
    /**
     * 获取图片存储路径
     * @return
     */
    private void getPhotopath() {
        // 照片全路径
        fileName = "";
        // 文件夹路径
        pathUrl = Environment.getExternalStorageDirectory().getPath();
        imageName = DateFormat.format("yyyyMMdd_hhmmss",Calendar.getInstance(Locale.CHINA)) + ".jpg";   
        fileName = pathUrl + "/"+imageName;
    }
    /**
     * Toast提示方法
     * @param str
     */
    public void DisplayToast(String str){
		Toast toast = Toast.makeText(this, str, Toast.LENGTH_SHORT);
		toast.setGravity(Gravity.BOTTOM, 0, 220);
		toast.show();
	}
    
   
    
 

}
