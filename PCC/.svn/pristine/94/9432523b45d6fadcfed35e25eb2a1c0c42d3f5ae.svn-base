package com.example.pcc;

import java.net.InetAddress;
import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View.OnClickListener;
import utils.PcControlService;
import view.CustomProgressDialog;

public class BaseActivity extends Activity {
	
	private static final int CLOSE_PROGRESS_DIALOG = 1;
	private static final int SHOW_PROGRESS_DIALOG = 2;
	private static final long DELAY_TIME = 20000;
	
	static private InetAddress mInetAddress;
	protected Context mContext;
	private CustomProgressDialog mDialog;
	
	private Handler mBaseHandler = new Handler(){
		@Override
		public void dispatchMessage(Message msg) {
			super.dispatchMessage(msg);
			
			switch(msg.what){
			case CLOSE_PROGRESS_DIALOG:
				mDialog.close();
				break;
			case SHOW_PROGRESS_DIALOG:
				mDialog = new CustomProgressDialog(mContext);
				mDialog.setTipText(mContext.getResources().getString(msg.arg1));
				mDialog.setCloseTime(DELAY_TIME);
				mDialog.show();
				break;
			default:
				break;
			};
			
		}
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		initData();
	}
	
	protected void setMyContent(int layoutResID){
		setContentView(layoutResID);
	}

	/**
	 * 搜索局域网下的主机，并且赋值给mInterfaceAddress
	 */
	protected void searchPc(){
		showProgressDialog();
		Thread th = new Thread(new SearchPcRunable(mDialog));
		th.start();
	}
	/**
	 * 检查是否获取到主机地址
	 * @return 如果有主机地址返回true
	 */
	protected boolean checkHost(){
		return mInetAddress == null;
	}
	
	/**
	 * 实现一个runable，会执行搜索主机的操作，一个延时20S的操作
	 * 1.在20s内没有搜索到主机会显示失败
	 * 2.在20s内搜索到主机会自动显示完成并且关闭对话框
	 * @author Lqq
	 *
	 */
	protected class SearchPcRunable implements Runnable{
		
		private CustomProgressDialog mDialog;
		
		public SearchPcRunable(CustomProgressDialog dialog) {
			mDialog = dialog;
		}
		@Override
		public void run() {
			mInetAddress = PcControlService.searchPc();
			toDoGetHostAddress();
			closeProgressDialog();
		}
	}
	
	private void initData(){
		mContext = this;
		if(mInetAddress == null){
			searchPc();
		}
	}
	
	protected InetAddress getHostInetAddress(){
		return mInetAddress;
	}
	
	protected void showProgressDialog(){
		showProgressDialog(R.string.loding);
	}
	
	protected void showProgressDialog(int tip){
		Message msg = new Message();
		msg.what = SHOW_PROGRESS_DIALOG;
		msg.arg1 = tip;
		mBaseHandler.sendMessage(msg);
	}

	protected void closeProgressDialog(){
		mBaseHandler.sendEmptyMessage(CLOSE_PROGRESS_DIALOG);
	}
	/**
	 * 这个函数会在得到主机地址后被调用
	 */
	protected void toDoGetHostAddress(){
		
	}
	
	/**
	 * 设置返回按钮监听
	 * @param l
	 */
	void setBackButtonListener(OnClickListener l){
		
	}
	/**
	 * 用于是否显示提示信息
	 * @param isShowInfo
	 */
	void setShowInfo(boolean isShowInfo){
		
	}
	/**
	 * 设置提示信息文字
	 * @param r
	 */
	void setShowInfoText(int r){
		
	}
	/**
	 * 用于设置右上角图片的监听事件
	 * @param l
	 */
	void setShowInfoPictureListener(OnClickListener l){
		
	}
	/**
	 * 设置提示信息右边图片
	 * @param r
	 */
	void setShowInfoPicture(int r){
		
	}
	/**
	 * 设置标题文字
	 */
	void setTitle(String s){
		
	}
}
